{"ast":null,"code":"import { mapGetters, mapActions } from 'vuex';\nexport default {\n  name: 'c-side-bar',\n  data: () => ({\n    items: [{\n      title: 'Home',\n      icon: 'dashboard',\n      route: 'home'\n    }, {\n      title: 'About',\n      icon: 'question_answer',\n      route: 'about'\n    }]\n  }),\n  computed: {\n    ...mapGetters({\n      sideBar: 'sideBar',\n      user: 'auth/user',\n      guest: 'auth/guest'\n    }),\n    drawer: {\n      get() {\n        return this.sideBar;\n      },\n      set(value) {\n        this.setSideBar(value);\n      }\n    }\n  },\n  methods: {\n    ...mapActions({\n      setSideBar: 'setSideBar',\n      setStatusDialog: 'dialog/setStatus',\n      setComponent: 'dialog/setComponent',\n      setAuth: 'auth/set',\n      setAlert: 'alert/set'\n    }),\n    login() {\n      this.setStatusDialog(true);\n      this.setComponent('login');\n      this.setSideBar(false);\n    },\n    register() {\n      this.setStatusDialog(true);\n      this.setComponent('register');\n      this.setSideBar(false);\n    },\n    logout() {\n      let config = {\n        headers: {\n          'Authorization': 'Bearer ' + this.user.api_token\n        }\n      };\n      this.axios.post('/logout', {}, config).then(() => {\n        this.setAuth({});\n        this.setAlert({\n          status: true,\n          text: 'Logout succesfuly',\n          type: 'success'\n        });\n        this.setSideBar(false);\n      }).catch(error => {\n        let response = error.response;\n        this.setAlert({\n          status: true,\n          text: response.data.message,\n          type: 'error'\n        });\n      });\n    },\n    drawerFalse() {\n      this.drawer = false;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapActions","name","data","items","title","icon","route","computed","sideBar","user","guest","drawer","get","set","value","setSideBar","methods","setStatusDialog","setComponent","setAuth","setAlert","login","register","logout","config","headers","api_token","axios","post","then","status","text","type","catch","error","response","message","drawerFalse"],"sources":["src/components/CSideBar.vue"],"sourcesContent":["<template>\r\n    <v-navigation-drawer v-model=\"drawer\" absolute fixed clipped>\r\n      <v-toolbar dark color=\"primary\">\r\n        <v-btn icon dark @click=\"drawerFalse\">\r\n          <v-icon>close</v-icon>\r\n        </v-btn>\r\n        <v-toolbar-title>Bookstore</v-toolbar-title>\r\n      </v-toolbar>\r\n  \r\n      <!--v-list>\r\n        <v-list-item>\r\n          <v-btn depressed block rounded color=\"secondary\" class=\"white--text\">\r\n            Register <v-icon right dark>person_add</v-icon>\r\n          </v-btn>\r\n        </v-list-item>\r\n      </v-list>\r\n\r\n      <v-list-item>\r\n        <v-btn @click=\"login()\" block rounded depresed color=\"accent lighten-1\" class=\"white--text\">\r\n          Login\r\n          <v-icon right dark>lock_open</v-icon>\r\n        </v-btn>\r\n      </v-list-item> -->\r\n\r\n      <v-list v-if=\"guest\">\r\n        <v-list-item>\r\n          <v-btn @click=\"register()\" depressed block rounded color=\"secondary\" class=\"white--text\">\r\n            Register\r\n            <v-icon right dark>person_add</v-icon>\r\n          </v-btn>\r\n        </v-list-item>\r\n        <v-list-item>\r\n          <v-btn @click=\"login()\" block rounded depressed color=\"accent lighten-1\" class=\"white--text\">\r\n            Login\r\n            <v-icon right dark>lock_open</v-icon>\r\n          </v-btn>\r\n        </v-list-item>\r\n      </v-list>\r\n      <v-list v-if=\"!guest\">\r\n        <v-list-item>\r\n          <v-list-item-avatar>\r\n            <img v-if=\"user.avatar==null\" :src=\"getImage('/notfound.jpg')\">\r\n            <img v-else :src=\"getImage('/users/'+user.avatar)\">\r\n          </v-list-item-avatar>\r\n          <v-list-item-content>\r\n            <v-list-item-title>\r\n              {{ user.name }}\r\n            </v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n        <v-list-item>\r\n          <v-btn block small rounded depressed color=\"error lighten-1\" class=\"white--text\" @click.stop=\"\r\n          logout();\">\r\n            Logout\r\n            <v-icon small right dark>settings_power</v-icon>\r\n          </v-btn>\r\n        </v-list-item>\r\n      </v-list>\r\n      \r\n  \r\n      <v-list class=\"pt-0\" dense>\r\n        <v-divider></v-divider>\r\n  \r\n        <v-list-item v-for=\"(item,index) in items\" :key=\"index\" :href=\"item.route\" :to=\"{name: item.route}\">\r\n          <v-list-item-action>\r\n            <v-icon>{{ item.icon }}</v-icon>\r\n          </v-list-item-action>\r\n          <v-list-item-content>\r\n            <v-list-item-title>{{ item.title }}</v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n      </v-list>\r\n    </v-navigation-drawer>\r\n  </template>\r\n  \r\n  <script>\r\n    import { mapGetters, mapActions } from 'vuex';\r\n  \r\n    export default {\r\n      name: 'c-side-bar',\r\n      data: () => ({\r\n        items: [\r\n          { title: 'Home', icon: 'dashboard', route: 'home' },\r\n          { title: 'About', icon: 'question_answer', route: 'about' },\r\n        ]\r\n      }),\r\n      computed: {\r\n        ...mapGetters({\r\n          sideBar : 'sideBar',\r\n          user : 'auth/user',\r\n          guest : 'auth/guest',\r\n        }),\r\n        drawer: {\r\n          get () {\r\n            return this.sideBar\r\n          },\r\n          set(value) {\r\n            this.setSideBar(value)\r\n          }\r\n        },\r\n      },\r\n      methods: {\r\n        ...mapActions({\r\n          setSideBar : 'setSideBar',\r\n          setStatusDialog : 'dialog/setStatus',\r\n          setComponent : 'dialog/setComponent',\r\n          setAuth : 'auth/set',\r\n          setAlert : 'alert/set',\r\n        }),\r\n        login(){\r\n          this.setStatusDialog(true)\r\n          this.setComponent('login')\r\n          this.setSideBar(false)\r\n        },\r\n        register(){\r\n          this.setStatusDialog(true)\r\n          this.setComponent('register')\r\n          this.setSideBar(false)\r\n        },\r\n        logout(){\r\n          let config = {\r\n            headers: {\r\n              'Authorization': 'Bearer ' + this.user.api_token,\r\n            },\r\n          }\r\n          this.axios.post('/logout', {}, config)\r\n            .then(() => {\r\n              this.setAuth({})\r\n              this.setAlert({\r\n                status: true,\r\n                text: 'Logout succesfuly',\r\n                type: 'success',\r\n              })\r\n              this.setSideBar(false)\r\n            })\r\n            .catch((error)=> {\r\n              let response = error.response\r\n              this.setAlert({\r\n                status: true,\r\n                text : response.data.message,\r\n                type : 'error',\r\n              })\r\n            })\r\n        },\r\n        drawerFalse() {\r\n          this.drawer = false;\r\n        },\r\n      },\r\n    }\r\n  </script>\r\n  "],"mappings":"AA4EA,SAAAA,UAAA,EAAAC,UAAA;AAEA;EACAC,IAAA;EACAC,IAAA,EAAAA,CAAA;IACAC,KAAA,GACA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,KAAA;IAAA,GACA;MAAAF,KAAA;MAAAC,IAAA;MAAAC,KAAA;IAAA;EAEA;EACAC,QAAA;IACA,GAAAR,UAAA;MACAS,OAAA;MACAC,IAAA;MACAC,KAAA;IACA;IACAC,MAAA;MACAC,IAAA;QACA,YAAAJ,OAAA;MACA;MACAK,IAAAC,KAAA;QACA,KAAAC,UAAA,CAAAD,KAAA;MACA;IACA;EACA;EACAE,OAAA;IACA,GAAAhB,UAAA;MACAe,UAAA;MACAE,eAAA;MACAC,YAAA;MACAC,OAAA;MACAC,QAAA;IACA;IACAC,MAAA;MACA,KAAAJ,eAAA;MACA,KAAAC,YAAA;MACA,KAAAH,UAAA;IACA;IACAO,SAAA;MACA,KAAAL,eAAA;MACA,KAAAC,YAAA;MACA,KAAAH,UAAA;IACA;IACAQ,OAAA;MACA,IAAAC,MAAA;QACAC,OAAA;UACA,kCAAAhB,IAAA,CAAAiB;QACA;MACA;MACA,KAAAC,KAAA,CAAAC,IAAA,gBAAAJ,MAAA,EACAK,IAAA;QACA,KAAAV,OAAA;QACA,KAAAC,QAAA;UACAU,MAAA;UACAC,IAAA;UACAC,IAAA;QACA;QACA,KAAAjB,UAAA;MACA,GACAkB,KAAA,CAAAC,KAAA;QACA,IAAAC,QAAA,GAAAD,KAAA,CAAAC,QAAA;QACA,KAAAf,QAAA;UACAU,MAAA;UACAC,IAAA,EAAAI,QAAA,CAAAjC,IAAA,CAAAkC,OAAA;UACAJ,IAAA;QACA;MACA;IACA;IACAK,YAAA;MACA,KAAA1B,MAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}