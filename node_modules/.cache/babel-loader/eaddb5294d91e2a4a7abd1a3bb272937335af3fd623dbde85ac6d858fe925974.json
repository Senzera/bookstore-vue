{"ast":null,"code":"import { mapActions } from 'vuex';\nexport default {\n  name: 'SearchPage',\n  data() {\n    return {\n      keyword: '',\n      items: []\n    };\n  },\n  methods: {\n    ...mapActions({\n      setStatusDialog: 'dialog/setStatus'\n    }),\n    close() {\n      this.setStatusDialog(false);\n    },\n    doSearch() {\n      let keyword = this.keyword;\n      if (keyword.length > 0) {\n        this.axios.get('/books/search/' + keyword).then(response => {\n          let books = response.data.data;\n          this.items = books;\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    }\n  },\n  mounted() {\n    if (this.$refs.txtSearch !== undefined) {\n      this.$nextTick(() => this.$refs.txtSearch.focus());\n    }\n  }\n};","map":{"version":3,"names":["mapActions","name","data","keyword","items","methods","setStatusDialog","close","doSearch","length","axios","get","then","response","books","catch","error","console","log","mounted","$refs","txtSearch","undefined","$nextTick","focus"],"sources":["src/views/Search.vue"],"sourcesContent":["<template>\r\n    <v-card>\r\n      <v-toolbar dark color=\"primary\">\r\n        <v-btn icon dark @click.native=\"close\">\r\n          <v-icon>close</v-icon>\r\n        </v-btn>\r\n        <v-text-field v-model=\"keyword\" @input=\"doSearch\" hide-details append-icon=\"mic\" text label=\"Search\" prepend-inner-icon=\"search\" solo-inverted ref=\"txtSearch\"></v-text-field>\r\n      </v-toolbar>\r\n      <v-divider></v-divider>\r\n      <v-subheader v-if=\"keyword.length>0\">\r\n        Result search \"{{ keyword }}\"\r\n      </v-subheader>\r\n      <v-alert :value=\"items.length===0 && keyword.length>0\" color=\"warning\">\r\n        Sorry, but no results were found.\r\n      </v-alert>\r\n  \r\n      <v-list two-line v-if=\"items.length>0\">\r\n        <v-list-item v-for=\"item in items\" :key=\"item.id\" @click=\"close\" :to=\"'/book/'+ item.slug\">\r\n          <v-list-item-avatar>\r\n            <img :src=\"getImage('/books/'+item.cover)\" alt=\"Book Cover\">\r\n          </v-list-item-avatar>\r\n          <v-list-item-content>\r\n            <v-list-item-title v-html=\"item.title\"></v-list-item-title>\r\n          </v-list-item-content>\r\n        </v-list-item>\r\n      </v-list>\r\n    </v-card>\r\n  </template>\r\n  \r\n  <script>\r\n  import { mapActions } from 'vuex';\r\n  \r\n  export default {\r\n    name: 'SearchPage',\r\n    data() {\r\n      return {\r\n        keyword: '',\r\n        items: [],\r\n      };\r\n    },\r\n    methods: {\r\n      ...mapActions({\r\n        setStatusDialog: 'dialog/setStatus',\r\n      }),\r\n      close() {\r\n        this.setStatusDialog(false);\r\n      },\r\n      doSearch() {\r\n        let keyword = this.keyword;\r\n        if (keyword.length > 0) {\r\n          this.axios\r\n            .get('/books/search/' + keyword)\r\n            .then((response) => {\r\n              let books = response.data.data;\r\n              this.items = books;\r\n            })\r\n            .catch((error) => {\r\n              console.log(error);\r\n            });\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      if (this.$refs.txtSearch !== undefined) {\r\n        this.$nextTick(() => this.$refs.txtSearch.focus());\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"AA8BA,SAAAA,UAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,KAAA;IACA;EACA;EACAC,OAAA;IACA,GAAAL,UAAA;MACAM,eAAA;IACA;IACAC,MAAA;MACA,KAAAD,eAAA;IACA;IACAE,SAAA;MACA,IAAAL,OAAA,QAAAA,OAAA;MACA,IAAAA,OAAA,CAAAM,MAAA;QACA,KAAAC,KAAA,CACAC,GAAA,oBAAAR,OAAA,EACAS,IAAA,CAAAC,QAAA;UACA,IAAAC,KAAA,GAAAD,QAAA,CAAAX,IAAA,CAAAA,IAAA;UACA,KAAAE,KAAA,GAAAU,KAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA;IACA;EACA;EACAG,QAAA;IACA,SAAAC,KAAA,CAAAC,SAAA,KAAAC,SAAA;MACA,KAAAC,SAAA,YAAAH,KAAA,CAAAC,SAAA,CAAAG,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}